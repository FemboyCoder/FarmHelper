name: build-ci

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Java setup
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: chmod +x gradlew; ./gradlew setupCiWorkspace && ./gradlew build --stacktrace
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-artifacts
          path: build
      - name: Verify build artifacts
        run: |
          ls -R build
      - name: Fetch latest commit details
        id: latest_commit
        run: |
          COMMIT_API_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" "https://api.github.com/repos/JellyLabScripts/FarmHelper/commits?per_page=1")
          COMMIT_SHA=$(echo "$COMMIT_API_RESPONSE" | jq -r '.[0].sha')
          COMMIT_MESSAGE=$(echo "$COMMIT_API_RESPONSE" | jq -r '.[0].commit.message')
          echo "::set-output name=commit_sha::$COMMIT_SHA"
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

      - name: Send embed message with timestamp and footer
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)
          LONG_DATE=$(date -u +"%A, %B %-d, %Y at %T")
          curl -X POST -H "Content-Type: application/json" \
            -d '{
                  "embeds": [
                    {
                      "title": "FarmHelper has updated!",
                      "description": "To view the full list of changes head over to the GitHub \u200B[commits](https://github.com/JellyLabScripts/FarmHelper/commits/master).",
                      "color": 65280,
                      "timestamp": "'"$TIMESTAMP"'",
                      "footer": {
                        "text": "Latest commit: '"$LONG_DATE"'\n'"${{ steps.latest_commit.outputs.commit_message }}"' ('"${{ steps.latest_commit.outputs.commit_sha }}"')"
                      }
                    }
                  ]
                }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
      - name: Send build artifacts to Discord webhook
        run: |
          cd build
          for file in *.jar; do
            curl -X POST -H "Content-Type: multipart/form-data" \
              -F "file=@$file" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
          done
